// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shaft.Infra.Db;

#nullable disable

namespace Ins.Infra.Migrations
{
    [DbContext(typeof(ShaftDbContext))]
    [Migration("20230409083545_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.4");

            modelBuilder.Entity("Shaft.Infra.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("client_id");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("creation_time");

                    b.Property<string>("Desp")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("desp");

                    b.Property<bool>("Ok")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ok");

                    b.HasKey("Id")
                        .HasName("pk_products");

                    b.HasIndex("ClientId")
                        .HasDatabaseName("ix_products_client_id");

                    b.HasIndex("CreationTime")
                        .HasDatabaseName("ix_products_creation_time");

                    b.HasIndex("Desp")
                        .HasDatabaseName("ix_products_desp");

                    b.HasIndex("Ok")
                        .HasDatabaseName("ix_products_ok");

                    b.ToTable("products", (string)null);
                });

            modelBuilder.Entity("Shaft.Infra.Entities.Spec", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT")
                        .HasColumnName("creation_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<bool>("Ok")
                        .HasColumnType("INTEGER")
                        .HasColumnName("ok");

                    b.Property<long>("ProductId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Value")
                        .HasColumnType("TEXT")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_specs");

                    b.HasIndex("Name")
                        .HasDatabaseName("ix_specs_name");

                    b.HasIndex("Ok")
                        .HasDatabaseName("ix_specs_ok");

                    b.HasIndex("ProductId")
                        .HasDatabaseName("ix_specs_product_id");

                    b.ToTable("specs", (string)null);
                });

            modelBuilder.Entity("Shaft.Infra.Entities.SpecMeta", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnName("description");

                    b.Property<decimal>("Lower")
                        .HasColumnType("TEXT")
                        .HasColumnName("lower");

                    b.Property<decimal>("Upper")
                        .HasColumnType("TEXT")
                        .HasColumnName("upper");

                    b.HasKey("Name")
                        .HasName("pk_spec_meta");

                    b.ToTable("spec_meta", (string)null);

                    b.HasData(
                        new
                        {
                            Name = "chamfer",
                            Lower = 0m,
                            Upper = 1m
                        },
                        new
                        {
                            Name = "5_a",
                            Lower = 12.026m,
                            Upper = 12.038m
                        },
                        new
                        {
                            Name = "5_b",
                            Lower = 12.026m,
                            Upper = 12.038m
                        },
                        new
                        {
                            Name = "2",
                            Lower = 91.9m,
                            Upper = 92.1m
                        });
                });

            modelBuilder.Entity("Shaft.Infra.Entities.Spec", b =>
                {
                    b.HasOne("Shaft.Infra.Entities.SpecMeta", "Meta")
                        .WithMany()
                        .HasForeignKey("Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_specs_spec_meta_meta_temp_id");

                    b.HasOne("Shaft.Infra.Entities.Product", "Product")
                        .WithMany("Specs")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_specs_products_product_id");

                    b.Navigation("Meta");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Shaft.Infra.Entities.Product", b =>
                {
                    b.Navigation("Specs");
                });
#pragma warning restore 612, 618
        }
    }
}
